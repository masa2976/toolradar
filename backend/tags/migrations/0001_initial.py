# Generated by Django 5.2.6 on 2025-10-01 03:20

import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
                ('slug', models.SlugField(allow_unicode=True, max_length=100, unique=True, verbose_name='slug')),
                ('category', models.CharField(choices=[('technical_indicator', 'テクニカル指標'), ('trade_style', '取引スタイル'), ('currency_pair', '通貨ペア'), ('strategy_type', '戦略タイプ')], help_text='タグのカテゴリ', max_length=30, verbose_name='カテゴリ')),
                ('synonyms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, help_text='カンマ区切りで入力（例: ＲＳＩ,アールエスアイ）', size=None, verbose_name='表記ゆれ')),
                ('description', models.TextField(blank=True, help_text='タグの説明（任意）', verbose_name='説明')),
            ],
            options={
                'verbose_name': 'タグ',
                'verbose_name_plural': 'タグ',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TaggedItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(db_index=True, verbose_name='object ID')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_tagged_items', to='contenttypes.contenttype', verbose_name='content type')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='tags.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
